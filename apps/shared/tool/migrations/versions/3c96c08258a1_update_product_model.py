"""Update product model

Revision ID: 3c96c08258a1
Revises: 68b7c1c6a241
Create Date: 2023-09-13 01:05:29.360107

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3c96c08258a1'
down_revision = '68b7c1c6a241'
branch_labels = None
depends_on = None

product_rarity_enum = sa.Enum(*("NORMAL", "RARE", "EPIC", "UNIQUE", "LEGENDARY"), name="productrarity")
product_asset_ui_size_enum = sa.Enum(
    *("ONE_BY_ONE", "ONE_BY_TWO", "ONE_BY_THREE", "ONE_BY_FOUR",
      "TWO_BY_ONE", "TWO_BY_TWO", "TWO_BY_THREE", "TWO_BY_FOUR",
      "THREE_BY_ONE", "THREE_BY_TWO", "THREE_BY_THREE", "THREE_BY_FOUR",
      "FOUR_BY_ONE", "FOUR_BY_TWO", "FOUR_BY_THREE", "FOUR_BY_FOUR"
      ),
    name="productassetuisize"
)


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    product_rarity_enum.create(op.get_bind(), checkfirst=False)
    product_asset_ui_size_enum.create(op.get_bind(), checkfirst=False)
    op.create_table('category',
                    sa.Column('name', sa.Text(), nullable=False),
                    sa.Column('order', sa.Integer(), nullable=False),
                    sa.Column('active', sa.Boolean(), nullable=False),
                    sa.Column('open_timestamp', sa.DateTime(), nullable=True),
                    sa.Column('close_timestamp', sa.DateTime(), nullable=True),
                    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
                    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
                    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('category_product',
                    sa.Column('category_id', sa.Integer(), nullable=True),
                    sa.Column('product_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
                    sa.ForeignKeyConstraint(['product_id'], ['product.id'], )
                    )
    op.add_column('price', sa.Column('discount', sa.Numeric(), nullable=False, server_default="0"))
    op.add_column('price', sa.Column('regular_price', sa.Numeric(), nullable=False, server_default="0"))
    op.alter_column('product', 'display_order', new_column_name='order')
    op.add_column('product', sa.Column('account_limit', sa.Integer(), nullable=True))
    op.add_column('product', sa.Column('open_timestamp', sa.DateTime(), nullable=True))
    op.add_column('product', sa.Column('close_timestamp', sa.DateTime(), nullable=True))
    op.add_column('product', sa.Column('discount', sa.Numeric(), nullable=False, server_default="0"))
    op.add_column('product', sa.Column('rarity', product_rarity_enum, nullable=False, server_default="NORMAL"))
    op.add_column('product', sa.Column('size', product_asset_ui_size_enum, nullable=True))
    op.add_column('product', sa.Column('path', sa.Text(), nullable=True))
    op.drop_column('product', 'product_type')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('product',
                  sa.Column('product_type', postgresql.ENUM('SINGLE', 'PKG', name='producttype'),
                            autoincrement=False, nullable=False, server_default="SINGLE"))

    op.drop_column('product', 'path')
    op.drop_column('product', 'size')
    op.drop_column('product', 'rarity')
    op.drop_column('product', 'discount')
    op.drop_column('product', 'close_timestamp')
    op.drop_column('product', 'open_timestamp')
    op.drop_column('product', 'account_limit')
    op.alter_column('product', 'order', new_column_name="display_order")
    op.drop_column('price', 'regular_price')
    op.drop_column('price', 'discount')
    op.drop_table('category_product')
    op.drop_table('category')
    product_asset_ui_size_enum.drop(op.get_bind(), checkfirst=False)
    product_rarity_enum.drop(op.get_bind(), checkfirst=False)
    # ### end Alembic commands ###
