"""Add required_level column

Revision ID: 90ff6ac09fe5
Revises: a2df38682595
Create Date: 2024-01-22 12:31:38.823682

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '90ff6ac09fe5'
down_revision = 'a2df38682595'
branch_labels = None
depends_on = None

old_enum = ("INIT", "VALIDATION_REQUEST", "VALID", "REFUNDED_BY_ADMIN", "INVALID", "REFUNDED_BY_BUYER",
            "PURCHASE_LIMIT_EXCEED", "TIME_LIMIT", "UNKNOWN")
new_enum = sorted(old_enum + ("REQUIRED_LEVEL",))

old_status = sa.Enum(*old_enum, name="receiptstatus")
new_status = sa.Enum(*new_enum, name="receiptstatus")
tmp_status = sa.Enum(*new_enum, name="_receiptstatus")

receipt_table = sa.sql.table(
    "receipt",
    sa.Column("status", new_status, nullable=False)
)


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    tmp_status.create(op.get_bind(), checkfirst=False)
    op.execute("ALTER TABLE receipt ALTER COLUMN status TYPE _receiptstatus USING status::text::_receiptstatus")
    old_status.drop(op.get_bind(), checkfirst=False)
    new_status.create(op.get_bind(), checkfirst=False)
    op.execute("ALTER TABLE receipt ALTER COLUMN status TYPE receiptstatus USING status::text::receiptstatus")
    tmp_status.drop(op.get_bind(), checkfirst=False)

    op.add_column('product', sa.Column('required_level', sa.Integer(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('product', 'required_level')

    op.execute(receipt_table.update()
               .where(receipt_table.c.status.in_(['REQUIRED_LEVEL']))
               .values(status="INVALID")
               )
    tmp_status.create(op.get_bind(), checkfirst=False)
    op.execute("ALTER TABLE receipt ALTER COLUMN status TYPE _receiptstatus USING status::text::_receiptstatus")
    new_status.drop(op.get_bind(), checkfirst=False)
    old_status.create(op.get_bind(), checkfirst=False)
    op.execute("ALTER TABLE receipt ALTER COLUMN status TYPE receiptstatus USING status::text::receiptstatus")
    tmp_status.drop(op.get_bind(), checkfirst=False)
    # ### end Alembic commands ###
