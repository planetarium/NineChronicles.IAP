"""Update ReceiptStatus

Revision ID: 4673eee05e67
Revises: b5e0d5e83ff7
Create Date: 2023-06-30 15:53:10.673076

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = '4673eee05e67'
down_revision = 'b5e0d5e83ff7'
branch_labels = None
depends_on = None

old_enum = ("INIT", "VALIDATION_REQUEST", "VALID", "INVALID", "UNKNOWN")
new_enum = sorted(old_enum + ("REFUNDED_BY_ADMIN", "REFUNDED_BY_BUYER"))

old_status = sa.Enum(*old_enum, name="receiptstatus")
new_status = sa.Enum(*new_enum, name="receiptstatus")
tmp_status = sa.Enum(*new_enum, name="_receiptstatus")

receipt_table = sa.sql.table("receipt", sa.Column("status", new_status, nullable=False))


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    tmp_status.create(op.get_bind(), checkfirst=False)
    op.execute("ALTER TABLE receipt ALTER COLUMN status TYPE _receiptstatus USING status::text::_receiptstatus")
    old_status.drop(op.get_bind(), checkfirst=False)
    new_status.create(op.get_bind(), checkfirst=False)
    op.execute("ALTER TABLE receipt ALTER COLUMN status TYPE receiptstatus USING status::text::receiptstatus")
    tmp_status.drop(op.get_bind(), checkfirst=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(receipt_table.update()
               .where(receipt_table.c.status.in_(['REFUNDED_BY_ADMIN', 'REFUNDED_BY_BUYER']))
               .values(status="INVALID")
               )
    tmp_status.create(op.get_bind(), checkfirst=False)
    op.execute("ALTER TABLE receipt ALTER COLUMN status TYPE _receiptstatus USING status::text::_receiptstatus")
    new_status.drop(op.get_bind(), checkfirst=False)
    old_status.create(op.get_bind(), checkfirst=False)
    op.execute("ALTER TABLE receipt ALTER COLUMN status TYPE receiptstatus USING status::text::receiptstatus")
    tmp_status.drop(op.get_bind(), checkfirst=False)
    # ### end Alembic commands ###
