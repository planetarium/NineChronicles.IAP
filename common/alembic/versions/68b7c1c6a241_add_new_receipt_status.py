"""Add new receipt status

Revision ID: 68b7c1c6a241
Revises: c67c061f66e8
Create Date: 2023-07-14 15:35:53.254442

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = '68b7c1c6a241'
down_revision = 'c67c061f66e8'
branch_labels = None
depends_on = None

old_enum = ("INIT", "VALIDATION_REQUEST", "VALID", "REFUNDED_BY_ADMIN", "INVALID", "REFUNDED_BY_BUYER", "UNKNOWN")
new_enum = sorted(old_enum + ("PURCHASE_LIMIT_EXCEED",))

old_status = sa.Enum(*old_enum, name="receiptstatus")
new_status = sa.Enum(*new_enum, name="receiptstatus")
tmp_status = sa.Enum(*new_enum, name="_receiptstatus")

receipt_table = sa.sql.table("receipt", sa.Column("status", new_status, nullable=False))


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    tmp_status.create(op.get_bind(), checkfirst=False)
    op.execute("ALTER TABLE receipt ALTER COLUMN status TYPE _receiptstatus USING status::text::_receiptstatus")
    old_status.drop(op.get_bind(), checkfirst=False)
    new_status.create(op.get_bind(), checkfirst=False)
    op.execute("ALTER TABLE receipt ALTER COLUMN status TYPE receiptstatus USING status::text::receiptstatus")
    tmp_status.drop(op.get_bind(), checkfirst=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # NOTE: Purchase limit exceeded receipts are valid but blocked only by limitation.
    #  So back to `VALID`
    op.execute(receipt_table.update()
               .where(receipt_table.c.status.in_(['PURCHASE_LIMIT_EXCEED']))
               .values(status="VALID")
               )
    tmp_status.create(op.get_bind(), checkfirst=False)
    op.execute("ALTER TABLE receipt ALTER COLUMN status TYPE _receiptstatus USING status::text::_receiptstatus")
    new_status.drop(op.get_bind(), checkfirst=False)
    old_status.create(op.get_bind(), checkfirst=False)
    op.execute("ALTER TABLE receipt ALTER COLUMN status TYPE receiptstatus USING status::text::receiptstatus")
    tmp_status.drop(op.get_bind(), checkfirst=False)
    # ### end Alembic commands ###
